<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.jourwon.spring.boot</groupId>
    <artifactId>spring-boot-example</artifactId>
    <version>1.0.0</version>
    <packaging>pom</packaging>
    <description>企业级spring-boot案例-2.4.2版本</description>

    <modules>
        <!-- Spring Boot整合自定义banner -->
        <module>spring-boot-banner</module>
        <!-- Spring Boot整合验证码captcha -->
        <module>spring-boot-captcha</module>
        <!-- Spring Boot整合cors跨域资源共享 -->
        <module>spring-boot-cors</module>
        <!-- Spring Boot整合jpa实现增删改查 -->
        <module>spring-boot-data-jpa</module>
        <!-- Spring Boot整合Redis -->
        <module>spring-boot-data-redis</module>
        <!-- Spring Boot整合Druid数据库连接池 -->
        <module>spring-boot-druid</module>
        <!-- Spring Boot整合邮件发送 -->
        <module>spring-boot-email</module>
        <!-- Spring Boot整合全局异常处理,接口统一响应对象 -->
        <module>spring-boot-exception-handler</module>
        <!-- spring-boot快速入门-HelloWorld -->
        <module>spring-boot-helloworld</module>
        <!-- Spring Boot整合HikariCP数据库连接池 -->
        <module>spring-boot-hikaricp</module>
        <!-- Spring Boot整合https -->
        <module>spring-boot-https</module>
        <!-- Spring Boot整合Jackson,实现数据脱敏 -->
        <module>spring-boot-json-desensitization</module>
        <!-- Spring Boot整合Knife4j-API接口文档 -->
        <module>spring-boot-knife4j</module>
        <!-- Spring Boot整合log4j2日志 -->
        <module>spring-boot-log4j2</module>
        <!-- Spring Boot整合logback日志 -->
        <module>spring-boot-logback</module>
        <!-- Spring Boot整合MyBatis -->
        <module>spring-boot-mybatis</module>
        <!-- Spring Boot整合MyBatis,使用注解方式 -->
        <module>spring-boot-mybatis-annotation</module>
        <!-- Spring Boot整合MyBatis逆向工程 -->
        <module>spring-boot-mybatis-generator</module>
        <!-- Spring Boot整合通用mapper -->
        <module>spring-boot-mybatis-mapper</module>
        <!-- Spring Boot整合MyBatis多数据源 -->
        <module>spring-boot-mybatis-multi-datasource</module>
        <!-- Spring Boot整合MyBatis,使用pagehelper进行分页 -->
        <module>spring-boot-mybatis-pagehelper</module>
        <!-- Spring Boot整合MyBatis脱敏插件,实现手机号等信息脱敏 -->
        <module>spring-boot-mybatis-plugin-sensitive</module>
        <!-- Spring Boot整合Mybatis-Plus -->
        <module>spring-boot-mybatis-plus</module>
        <!-- Spring Boot整合MyBatis Plus代码生成器 -->
        <module>spring-boot-mybatis-plus-generator</module>
        <!-- Spring Boot整合MyBatis Plus多数据源 -->
        <module>spring-boot-mybatis-plus-multi-datasource</module>
        <!-- Spring Boot加载配置文件 -->
        <module>spring-boot-properties</module>
        <!-- Spring Boot整合接口限流-guava单体方式 -->
        <module>spring-boot-ratelimit-guava</module>
        <!-- Spring Boot整合接口限流-redis集群方式 -->
        <module>spring-boot-ratelimit-redis</module>
        <!-- Spring Boot整合Swagger3-API接口文档 -->
        <module>spring-boot-swagger3</module>
        <!-- Spring Boot整合模板引擎Thymeleaf -->
        <module>spring-boot-thymeleaf</module>
        <!-- Spring Boot整合undertow -->
        <module>spring-boot-undertow</module>
        <!-- Spring Boot项目打包成war包 -->
        <module>spring-boot-war</module>
    </modules>

    <properties>
        <!-- 设置jdk版本,maven编译环境和项目编码 -->
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- spring-boot依赖版本 -->
        <spring.boot.version>2.4.2</spring.boot.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- 锁定子模块spring-boot依赖版本,同时解决单继承问题 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>aliyunmaven</id>
            <name>阿里云公共仓库</name>
            <url>https://maven.aliyun.com/repository/public</url>
            <!-- 是否开启发布版构件下载 -->
            <releases>
                <enabled>true</enabled>
            </releases>
            <!-- 是否开启快照版构件下载 -->
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>aliyunmaven</id>
            <name>阿里云公共仓库</name>
            <url>https://maven.aliyun.com/repository/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

</project>